html, #main-bg{
    background-image: url("assets/background_celtra_version1.jpg");
    margin: 0;
    background-repeat: no-repeat;
    background-size: 100% 100%;
    height: 100vh;
    width: 100vw;
    color: #000 !important;
    font-family: Verdana !important;
    /* font-size:calc(4px + 1vmin); */
    font-size:calc(5px + 3vmin);


}
/*
main pane is the container for the gallery thumbnails, it is the parent to .row
 */
.main_pane{
    background-size: 100% 100%;
    position:relative;
    top: 2%;
    bottom: 2%;
    margin: 0 auto;
    height:96%;
    width:98%;
}
/*
 row is the element in which the gallery thumbnails are injected
 */
.row{
    display: flex;
    flex-wrap: wrap;
    padding: 0 4px;
}
/*
 gallery is the basic style for any gallery, then gallery-new is the new gallery button, and
 gallery filled, is an actual gallery, that was added.
 */
.gallery{
    background-repeat: no-repeat;
    background-size: 100% 100%;
    width:10vmax;
    height:10vmax;
    margin: 1vw;
    text-decoration:none;
    transition-duration: 0.4s;
}
.gallery:hover {
    animation-name: gallery-new;
    animation-duration: 1s;
    animation-iteration-count: infinite;
    animation-timing-function: linear;
    box-shadow: 0 12px 16px 0 rgba(0, 0, 0, 0.74),0 17px 50px 0 rgba(0, 0, 0, 0.42);
    opacity: 0.6;

}
.gallery-filled{
    border-radius: 10px;
}
.gallery-new {
    border-radius: 250px;
    background-image: linear-gradient(to right, rgba(0, 0, 0, 0.2), rgba(0, 0, 0, 0.5) ),url("assets/add_item_icon_greenv2.png");
}
.gallery-new:hover{
    opacity:1;
}
@keyframes gallery-new {
    100%  {transform: scale(1.0,1.0);}
    80%   {transform: scale(1.1,1.1);}
    60%   {transform: scale(1.2,1.2);}
    40%   {transform: scale(1.1,1.1);}
    20%   {transform: scale(1.0,1.0);}
}
/*
 form modal add button required styles for effects
 */
.button {
    background-color: #4CAF50;
    border: none;
    color: white;
    padding: 16px 32px;
    text-align: center;
    text-decoration: none;
    display: inline-block;
    font-size: calc(5px + 3vmin);
    margin: 4px 2px;
    transition-duration: 0.4s;
    cursor: pointer;
}
.button1 {
    background-color: #4CAF50;
    color: white;
    border: 2px solid #4CAF50;
}
.button1:hover {
    background-color: white;
    color: black;
    box-shadow: 0 12px 16px 0 rgba(0,0,0,0.24),0 17px 50px 0 rgba(0,0,0,0.19);
}
/*
form modal error text style
 */
.error{
    color:darkred;
    font-weight:bold;
    font-size: calc(2px + 3vmin);
}
/*
 success modal that displays after form is succesfully submited
 */
.success{
    background:darkseagreen !important;
    border: 0px !important;
    opacity:0.8;
    font-size:calc(2px + 3vmin);
}
.modal {
    display: block;
    position: fixed;
    z-index: 1;
    padding-top: 20px;
    background-color: rgba(0, 0, 0, 0.49);
    left: 0;
    top: 0;
    width: 100vw; /* Full width */
    height: 100vh; /* Full height */
    overflow: auto;
}
.modal-content {
    border-radius: 20px;
    background: rgb(255, 255, 255);
    margin: auto;
    padding: 1vw 1vh;
    border: 10px solid #5a3988;
    width: 80%;

}
.form{ /* Part of modal content form, thats why its here */
    position:absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    animation-name: animatefade-form;
    animation-duration: 0.4s
}
.form input[type=text]{
    width: 100%;
    padding: 12px;
    border: 1px solid #ccc;
    font-size:calc(5px + 3vmin);
    border-radius: 4px;
    box-sizing: border-box;
    resize: vertical;
}
/*
below are styles for (in order):
 the main modal viewer background, container for gallery images, gallery images, and the pagination
 */
.modal-gallery-viewer{
    display: block; /* Hidden by default */
    position: fixed; /* Stay in place */
    z-index: 2; /* Sit on top */
    background: rgba(17, 17, 17, 0.91);
    /*
    padding-top: 0vh;
    */
    color:black;
    opacity: 0.99;
    left: 0;
    top: 0;
    width: 100vw; /* Full width */
    height: 100vh; /* Full height */
}
.modal-gallery-content{
    position:absolute;
    top: 50%;
    transform: translateY(-50%);
    align-items:center;
    /*
    The hidden attribute is a workaround for a scrollbar that sometimes appears with percentage values,
    I can show it live, it should not be a problem but took too long to fix
    ( height of the parent of this is 100vh, which means full screen,
    this has height 50%, which halves that, so then, if images take 100% of that, it is still 50% of viewport
    height, but for some reason some very very minor clipping occurs )
     */
    overflow-y:hidden;
    overflow-x:scroll;

    padding-top:5%;
    padding-bottom:5%;
    /*
    Height is defined below as 50%, if needed, this can be changed to 90%, and images with 90% height value will fill entire screen.
    90% because paddings are set to 10% together, so there is no ugly clipping.
     */
    height:50%;
    width: 100%;
    display:inline-block;
    white-space: nowrap;

    /*
     user select none fixes a weird bug where element is selected instead of drag functionality
     */
    user-select: none;

    animation-name: animatefade-gallery;
    animation-duration: 1s
}
.modal-gallery-content img{
    /*
    pointer events and user select are set to enable dragging, sadly pointer events none disables ability to
    save image with right click
    scroll-snap-align:center;
    */

    --height: 100%;
    height:calc(var(--height));
    pointer-events: none;
    user-select: none;
    width:auto;
    margin-left: 10vw;
    margin-right: 10vw;
}
.modal-gallery-pagination {
    position:absolute;
    z-index: 2;
    width: 100%;
    height: 5vmax;
    bottom: 10%;

    margin-left:auto;
    margin-right:auto;
}
.pagination {
    position: relative;
    top: 50%;
    width:100%;
    display: flex;
    justify-content: center;
    align-items: center;
}
.pagination span{
    display: inline-block;
    position: relative;
    width: 5vmin;
    height: 5vmin;
    margin : 0.3%;
    border-radius: 50%;
}
.pagination span.active{
    border: 10px solid #3498db;
}
.pagination span:before {
    content: "";
    position: absolute;
    top: 3px;
    left: 3px;
    right: 3px;
    bottom: 3px;
    background: #e74c3c;
    border-radius: 50%;
}
/* Animations to make modals appear */
@keyframes animatefade {
    from {top: -300px; opacity: 0}
    to {top: 0; opacity: 1}
}
@keyframes animatefade-gallery { /* Used for opening gallery, where top is predefined */
    from {opacity: 0}
    to {opacity: 1}
}
@keyframes animatefade-form { /* Used for opening form */
    from {opacity: 0}
    to {opacity: 1}
}
/*
 The various red X buttons that close modals
 */
#closeGallery{
    position:fixed;
    top:5%;
    right:5%;
    z-index:3;
}
.close {
    color: rgb(255, 0, 32);
    float: right;
    font-size: 1em;
}
.close:hover,
.close:focus {
    color: #000;
    text-decoration: none;
    cursor: pointer;
}

/*
Below are hackish switch classes to create the iOS like checkbox slider switch displayed on the form.
they are not responsive, which I should fix too
 */
.switch {
    position: relative;
    display: inline-block;
    width: 60px;
    height: 34px;
}
.switch input {
    opacity: 0;
    width: 0;
    height: 0;
}
.slider {
    position: absolute;
    cursor: pointer;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: #ccc;
    transition: .4s;
}
.slider:before {
    position: absolute;
    content: "";
    height: 26px;
    width: 26px;
    left: 4px;
    bottom: 4px;
    background-color: white;
    transition: .4s;
}
input:checked + .slider {
    background-color: #2196F3;
}
input:focus + .slider {
    box-shadow: 0 0 1px #2196F3;
}
input:checked + .slider:before {
    -webkit-transform: translateX(26px);
    -ms-transform: translateX(26px);
    transform: translateX(26px);
}
.slider.round {
    border-radius: 34px;
}
.slider.round:before {
    border-radius: 50%;
}


/* I left the below styling blank, because i could do this also, if required, but it would take
alot of work testing various sizes for all the platforms below
 */
/* Mobile Style */
@media only screen and (max-width: 400px) {
    body {

    }
}

/* Tablet Style */
@media only screen and (min-width: 401px) and (max-width: 960px) {
    body {

    }
}

/* Desktop Style */
@media only screen and (min-width: 961px) {
    body {

    }
}